{"version":3,"file":"react-codes-input.min.js","mappings":"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","sources":["webpack://react-codes-input/webpack/universalModuleDefinition","webpack://react-codes-input/./src/js/Input/react-codes-input.css?7021","webpack://react-codes-input/./src/js/Input/ReactCodesInput.tsx","webpack://react-codes-input/./src/js/Input/index.global.ts","webpack://react-codes-input/./src/js/Input/utils.ts","webpack://react-codes-input/external umd \"React\"","webpack://react-codes-input/webpack/bootstrap","webpack://react-codes-input/webpack/runtime/make namespace object","webpack://react-codes-input/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"React\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"React\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-codes-input\"] = factory(require(\"React\"));\n\telse\n\t\troot[\"react-codes-input\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__24__) {\nreturn ","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"react-codes-input__component--hMZiq\",\"disabled\":\"react-codes-input__disabled--yBreD\",\"code\":\"react-codes-input__code--ot5P7\",\"wrapper\":\"react-codes-input__wrapper--deP_G\",\"code-wrapper\":\"react-codes-input__code-wrapper--nQ3Hf\",\"entered-value\":\"react-codes-input__entered-value--AwNna\",\"hide\":\"react-codes-input__hide--Hnm2o\",\"active\":\"react-codes-input__active--OvmED\",\"code-wrapper--focus\":\"react-codes-input__code-wrapper--focus--FaRc2\",\"entered\":\"react-codes-input__entered--bXk53\",\"blink-empty\":\"react-codes-input__blink-empty--ZYK8w\"};","import React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\nimport { cx, getRandomId, getAlphanumeric, getAlpha, getNumeric, getCased, CASE_TYPES, getClassName } from './utils';\nimport CSS from './react-codes-input.css';\nconst DEFAULT_CODE_LENGTH = 6;\nconst ALPHABETS = 'abcdefghijklmnopqrstuvwxyz'.split('');\nconst NUMBERS = '0123456789'.split('');\nconst ALPHABETNUMERICS = [...ALPHABETS, ...NUMBERS];\nconst TAB = 'tab';\nconst ENTER = 'enter';\nconst BACKSPACE = 'backspace';\nconst DELETE = 'delete';\nconst ARROW_LEFT = 'arrowleft';\nconst ARROW_RIGHT = 'arrowright';\nconst ARROW_UP = 'arrowup';\nconst ARROW_DOWN = 'arrowdown';\nconst OPERRATION_KEYS = [ENTER, BACKSPACE, DELETE, ARROW_LEFT, ARROW_RIGHT, ARROW_UP, ARROW_DOWN];\nconst ALLOWED_KEYS = [...ALPHABETNUMERICS, ...OPERRATION_KEYS];\nconst INVALID_KEY = '';\nconst HIDDEN_INPUT_TYPE = 'password';\nconst IS_MOBILE = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\nconst isValidKey = (key: string, type: string, code: string) => {\n  if (!ALLOWED_KEYS.includes(key)) {\n    return INVALID_KEY;\n  }\n  if (OPERRATION_KEYS.includes(key)) {\n    switch (key) {\n      case BACKSPACE: {\n        if (code === '') {\n          return INVALID_KEY;\n        } else {\n          return BACKSPACE;\n        }\n      }\n      case DELETE: {\n        if (code === '') {\n          return INVALID_KEY;\n        } else {\n          return DELETE;\n        }\n      }\n      case ARROW_UP: {\n        return ARROW_LEFT;\n      }\n      case ARROW_DOWN: {\n        return ARROW_RIGHT;\n      }\n      default: {\n        return key;\n      }\n    }\n  }\n  if (type === DEFAULT_TYPES.NUMBER) {\n    if (NUMBERS.indexOf(key) < 0) {\n      return INVALID_KEY;\n    }\n  }\n  if (type === DEFAULT_TYPES.ALPHA) {\n    if (ALPHABETS.indexOf(key) < 0) {\n      return INVALID_KEY;\n    }\n  }\n  if (type === DEFAULT_TYPES.ALPHANUMERTIC) {\n    if (ALPHABETNUMERICS.indexOf(key) < 0) {\n      return INVALID_KEY;\n    }\n  }\n  return key;\n};\nexport enum DEFAULT_TYPES {\n  ALPHANUMERTIC = 'alphanumeric',\n  ALPHA = 'alpha',\n  NUMBER = 'number',\n}\ninterface AttibutesObj {\n  type?: string;\n  pattern?: string;\n  minLength?: number;\n}\nexport interface ReactCodesInputProps {\n  wrapperRef?: React.RefObject<HTMLInputElement>;\n  value?: string;\n  onChange?: (value: string) => void;\n  initialFocus?: boolean;\n  codeLength?: number;\n  id?: string;\n  type?: 'number' | 'alpha' | 'alphanumeric';\n  letterCase?: 'upper' | 'lower';\n  disabled?: boolean;\n  hide?: boolean;\n  focusColor?: string;\n  classNameComponent?: string;\n  classNameWrapper?: string;\n  classNameCodeWrapper?: string;\n  classNameEnteredValue?: string;\n  classNameCode?: string;\n  classNameCodeWrapperFocus?: string;\n  customStyleComponent?: React.CSSProperties;\n  customStyleWrapper?: React.CSSProperties;\n  customStyleCodeWrapper?: React.CSSProperties;\n  customStyleEnteredValue?: React.CSSProperties;\n  customStyleCode?: React.CSSProperties;\n  customStyleCodeWrapperFocus?: React.CSSProperties;\n  placeholder?: string;\n  customStylePlaceholder?: React.CSSProperties;\n}\nconst ReactCodesInput: React.FC<ReactCodesInputProps> = ({\n  initialFocus = false,\n  wrapperRef,\n  codeLength = DEFAULT_CODE_LENGTH,\n  id = null,\n  onChange,\n  type = DEFAULT_TYPES.ALPHANUMERTIC,\n  letterCase = CASE_TYPES.UPPERCASE,\n  value = '',\n  disabled = false,\n  hide = false,\n  focusColor = '#007bff',\n  classNameComponent = '',\n  classNameWrapper = '',\n  classNameCodeWrapper = '',\n  classNameEnteredValue = '',\n  classNameCode = '',\n  classNameCodeWrapperFocus = '',\n  customStyleComponent = {},\n  customStyleWrapper = {},\n  customStyleCodeWrapper = {},\n  customStyleEnteredValue = {},\n  customStyleCode = {},\n  customStyleCodeWrapperFocus = {},\n  placeholder = '',\n  customStylePlaceholder = {},\n}) => {\n  const DEFAULT_CODES = useMemo(() => [...Array(codeLength).keys()], [codeLength]);\n  const [code, setCode] = useState<string>(value);\n  const [pressKey, setPressKey] = useState({ key: undefined });\n  const [isFocus, setIsFocus] = useState(false);\n  const $wrapperRef = useRef(null);\n  const $component = useRef(null);\n  const $inputRef = useRef(null);\n  const [curItemIndex, setCurItemIndex] = useState(0);\n  const inputId = useMemo(() => id || getRandomId(), [id]);\n  useEffect(() => {\n    if (initialFocus) {\n      document.getElementById(`${inputId}${0}`).click();\n    }\n  }, []);\n  const onKeyDown = useCallback(\n    (key: string) => {\n      if (!IS_MOBILE) {\n        if (key === ARROW_LEFT) {\n          const left = curItemIndex - 1;\n          setCurItemIndex(left < 0 ? 0 : left);\n          return;\n        }\n        if (key === ARROW_RIGHT) {\n          if (code === '') {\n            return;\n          }\n          const right = Math.min(curItemIndex + 1, DEFAULT_CODES.length - 1);\n          if (typeof code[right] === 'undefined') {\n            setCurItemIndex(code.length);\n            return;\n          }\n          setCurItemIndex(right);\n          return;\n        }\n      }\n      handleOnCodeChange(key);\n    },\n    [type, code, curItemIndex],\n  );\n  useEffect(() => {\n    if (pressKey.key) {\n      onKeyDown(pressKey.key);\n    }\n  }, [pressKey]);\n  useEffect(() => {\n    if (curItemIndex >= DEFAULT_CODES.length) {\n      setCurItemIndex(DEFAULT_CODES.length - 1);\n      return;\n    }\n    $inputRef.current.setSelectionRange(curItemIndex, curItemIndex);\n  }, [curItemIndex, DEFAULT_CODES]);\n  useEffect(() => {\n    setCode(getCased(value, letterCase));\n  }, [value, letterCase]);\n  const handleOnCodeChange = useCallback(\n    pressedKey => {\n      const codeSplits = code.split('');\n      if (pressedKey === BACKSPACE) {\n        // BACKSPACE case: set current code item empty and setCurItemIndex\n        let index = curItemIndex;\n        if (curItemIndex === DEFAULT_CODES.length - 1) {\n          if (code.length === DEFAULT_CODES.length) {\n            codeSplits[index] = '';\n            const newCode = codeSplits.join('');\n            handleSetCode(index, newCode, onChange);\n            return;\n          } else {\n            index -= 1;\n            codeSplits[index] = '';\n            const newCode = codeSplits.join('');\n            handleSetCode(index, newCode, onChange);\n            return;\n          }\n        }\n        if (curItemIndex === code.length) {\n          index -= 1;\n          codeSplits[index] = '';\n          const newCode = codeSplits.join('');\n          handleSetCode(index, newCode, onChange);\n          return;\n        }\n        codeSplits[index] = '';\n        const newCode = codeSplits.join('');\n        handleSetCode(Math.max(index - 1, 0), newCode, onChange);\n        return;\n      }\n      if (pressedKey === DELETE) {\n        // BACKSPACE case: set current code item empty and setCurItemIndex\n        let index = curItemIndex;\n        if (typeof codeSplits[curItemIndex] === 'undefined') {\n          index += 1;\n        }\n        index = Math.min(index, code.length);\n        codeSplits[index] = '';\n        const newCode = codeSplits.join('');\n        handleSetCode(index, newCode, onChange);\n        return;\n      }\n      if (ALPHABETNUMERICS.includes(pressedKey)) {\n        let v = '';\n        switch (type) {\n          case DEFAULT_TYPES.ALPHANUMERTIC:\n            v = getAlphanumeric(pressedKey);\n            break;\n          case DEFAULT_TYPES.ALPHA:\n            v = getAlpha(pressedKey);\n            break;\n          case DEFAULT_TYPES.NUMBER:\n            v = getNumeric(pressedKey);\n            break;\n          default:\n            v = getAlphanumeric(pressedKey);\n            break;\n        }\n        v = getCased(v, letterCase);\n        if (code === '') {\n          // initial case: just setCode(v)\n          const newCode = v;\n          handleSetCode(newCode.length, newCode, onChange);\n          return;\n        }\n        if (curItemIndex === code.length) {\n          // typing case: appending. setCode with the value just typed and setCurItemIndex with newCode.length\n          if (codeSplits.length < DEFAULT_CODES.length) {\n            codeSplits.push(v);\n            const newCode = codeSplits.join('');\n            let index = newCode.length;\n            if (newCode.length >= DEFAULT_CODES.length) {\n              index -= 1;\n            }\n            handleSetCode(index, newCode, onChange);\n            return;\n          }\n        } else {\n          if (IS_MOBILE) {\n            // mobile devices don't have arrow key\n            // typing case: appending. setCode with the value just typed and setCurItemIndex with newCode.length\n            if (codeSplits.length < DEFAULT_CODES.length) {\n              codeSplits.push(v);\n              const newCode = codeSplits.join('');\n              let index = newCode.length;\n              if (newCode.length >= DEFAULT_CODES.length) {\n                index -= 1;\n              }\n              handleSetCode(index, newCode, onChange);\n              return;\n            }\n          } else {\n            // typing case: replacing. setCode with the value just typed and do not setCurItemIndex\n            codeSplits[curItemIndex] = v;\n            const newCode = codeSplits.join('');\n            handleSetCode(typeof codeSplits[curItemIndex + 1] === 'undefined' ? curItemIndex + 1 : null, newCode, onChange);\n            return;\n          }\n        }\n      }\n    },\n    [type, letterCase, DEFAULT_CODES, code, curItemIndex],\n  );\n  const handleSetCode = useCallback((selectionIndex, code, onChange) => {\n    setCode(code);\n    if (selectionIndex !== null) {\n      setCurItemIndex(selectionIndex);\n    }\n    $inputRef.current.value = code;\n    if (typeof onChange === 'function') {\n      onChange(code);\n    }\n  }, []);\n  const handleOnCodeFocus = useCallback(() => {\n    setIsFocus(true);\n  }, []);\n  const handleOnCodeBlur = useCallback(() => {\n    setIsFocus(false);\n  }, []);\n  const attributes = useMemo(() => {\n    const res: AttibutesObj = {};\n    switch (type) {\n      case DEFAULT_TYPES.NUMBER:\n        res['type'] = IS_MOBILE ? 'tel' : HIDDEN_INPUT_TYPE;\n        res['pattern'] = `[0-9]{${DEFAULT_CODES.length},}`;\n        break;\n      case DEFAULT_TYPES.ALPHA:\n        res['type'] = HIDDEN_INPUT_TYPE;\n        res['pattern'] = `[A-Za-z]{${DEFAULT_CODES.length},}`;\n        break;\n      case DEFAULT_TYPES.ALPHANUMERTIC:\n        res['type'] = HIDDEN_INPUT_TYPE;\n        res['pattern'] = `[0-9A-Za-z]{${DEFAULT_CODES.length},}`;\n        break;\n    }\n    return res;\n  }, [type]);\n  return (\n    <div\n      ref={$component}\n      className={cx(CSS['component'], getClassName('component'), disabled && CSS['disabled'], disabled && getClassName('disabled'), classNameComponent)}\n      style={customStyleComponent}\n    >\n      <div ref={wrapperRef || $wrapperRef} className={cx(CSS['wrapper'], getClassName('wrapper'), classNameWrapper)} style={customStyleWrapper}>\n        {DEFAULT_CODES.map((i, k) => {\n          const isLastItem = k === DEFAULT_CODES.length - 1 ? true : false;\n          const isEntered = typeof code[k] === 'undefined' ? false : true;\n          let isActive = false;\n          const focusStyle: React.CSSProperties = {};\n          if (isFocus) {\n            isActive = curItemIndex === k;\n          }\n          if (isActive) {\n            focusStyle['border'] = `1px solid ${focusColor}`;\n            focusStyle['boxShadow'] = `0px 0px 5px 0px ${focusColor}`;\n          }\n          return (\n            <div\n              key={k}\n              id={`${inputId}${k}`}\n              onClick={() => {\n                let focusedIndex = -1;\n                for (let index = 0; index < DEFAULT_CODES.length; index += 1) {\n                  if (typeof code[index] === 'undefined') {\n                    document.getElementById(`${inputId}${index}`).click();\n                    focusedIndex = index;\n                    break;\n                  }\n                }\n                document.getElementById(inputId).focus();\n              }}\n              className={cx(\n                CSS['code-wrapper'],\n                getClassName('code-wrapper'),\n                classNameCodeWrapper,\n                isActive && CSS['active'],\n                isActive && getClassName('active'),\n                isEntered && CSS['entered'],\n                isEntered && getClassName('entered'),\n              )}\n              style={customStyleCodeWrapper}\n            >\n              <div\n                className={cx(CSS['entered-value'], getClassName('entered-value'), classNameEnteredValue, hide && isEntered && CSS['hide'], hide && isEntered && getClassName('hide'))}\n                style={customStyleEnteredValue}\n              >\n                {typeof code[k] === 'undefined' && <span style={{ color: '#ddd', ...customStylePlaceholder }}>{placeholder.split('')[k]}</span>} {hide ? '' : code[k]}\n              </div>\n              <div className={cx(CSS['code'], getClassName('code'), classNameCode)} style={customStyleCode}>\n                <div className={cx(CSS['code-wrapper--focus'], getClassName('code-wrapper--focus'), classNameCodeWrapperFocus)} style={{ ...focusStyle, ...customStyleCodeWrapperFocus }} />\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <input\n        ref={$inputRef}\n        id={inputId}\n        autoComplete=\"off\"\n        disabled={disabled}\n        maxLength={DEFAULT_CODES.length}\n        required\n        onFocus={handleOnCodeFocus}\n        onBlur={handleOnCodeBlur}\n        onKeyDown={e => {\n          let key = e.key.toLowerCase();\n          if (key !== ENTER && key !== TAB) {\n            e.preventDefault();\n          }\n          if (key === TAB) {\n            if (!(code.length < 0 || code.length > DEFAULT_CODES.length)) {\n              if (e.shiftKey) {\n                if (curItemIndex !== 0) {\n                  key = ARROW_LEFT;\n                  e.preventDefault();\n                }\n              } else {\n                if (!(curItemIndex === DEFAULT_CODES.length - 1 && code.length === DEFAULT_CODES.length)) {\n                  // right bound\n                  key = ARROW_RIGHT;\n                  e.preventDefault();\n                }\n              }\n            }\n          } else {\n            if (e.ctrlKey || e.altKey || e.shiftKey || e.metaKey) {\n              return;\n            }\n          }\n          const validKey = isValidKey(key, type, code);\n          if (validKey === INVALID_KEY) {\n            return;\n          }\n          setPressKey({ key: validKey });\n        }}\n        style={{\n          position: 'absolute',\n          opacity: '0',\n          marginLeft: '-9999999px',\n        }}\n        {...attributes}\n      />\n    </div>\n  );\n};\n\nexport default ReactCodesInput;\n","import ReactCodesInput from './ReactCodesInput';\nif (typeof window !== 'undefined') {\n  (<any>window).ReactCodesInput = ReactCodesInput;\n}\n\nexport default ReactCodesInput;\n","export enum CASE_TYPES {\n  UPPERCASE = 'upper',\n  LOWERCASE = 'lower',\n}\n\nexport const cx = (...params: Array<any>) => {\n  const classes = [];\n  for (let i = 0; i < params.length; i += 1) {\n    const arg = params[i];\n    if (!arg) continue;\n    const argType = typeof arg;\n    if (argType === 'string' || argType === 'number') {\n      classes.push(arg);\n    } else if (Array.isArray(arg) && arg.length) {\n      const inner: string = cx.apply(null, arg);\n      if (inner) {\n        classes.push(inner);\n      }\n    } else if (argType === 'object') {\n      for (const key in arg) {\n        if ({}.hasOwnProperty.call(arg, key) && arg[key]) {\n          classes.push(key);\n        }\n      }\n    }\n  }\n  return classes.join(' ');\n};\n\nexport const getRandomId = () => {\n  return Math.random().toString(36).slice(-8);\n};\n\nexport const getAlphanumeric = (v: string) => {\n  let res = '';\n  String(v)\n    .split('')\n    .forEach(i => {\n      const charCode = i.toLowerCase().charCodeAt(0);\n      if ((charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 122)) {\n        res += i;\n      }\n    });\n  return res;\n};\n\nexport const getAlpha = (v: string) => {\n  let res = '';\n  String(v)\n    .split('')\n    .forEach(i => {\n      const charCode = i.toLowerCase().charCodeAt(0);\n      if (charCode >= 97 && charCode <= 122) {\n        res += i;\n      }\n    });\n  return res;\n};\n\nexport const getNumeric = (v: string) => {\n  let res = '';\n  v.split('').forEach(i => {\n    const charCode = i.toLowerCase().charCodeAt(0);\n    if (charCode >= 48 && charCode <= 57) {\n      res += i;\n    }\n  });\n  return res;\n};\n\nexport const getCased = (v: string, type: string) => {\n  if (type) {\n    switch (type) {\n      case CASE_TYPES.UPPERCASE:\n        return v.toUpperCase();\n      case CASE_TYPES.LOWERCASE:\n        return v.toLowerCase();\n    }\n  } else {\n    return v.toUpperCase();\n  }\n};\n\nexport const getClassName = (className: string) => `RCI-${className}`;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__24__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(843);\n"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__24__","DEFAULT_TYPES","ALPHABETS","split","NUMBERS","ALPHABETNUMERICS","ENTER","BACKSPACE","DELETE","ARROW_LEFT","ARROW_RIGHT","ARROW_UP","ARROW_DOWN","OPERRATION_KEYS","ALLOWED_KEYS","HIDDEN_INPUT_TYPE","IS_MOBILE","test","navigator","userAgent","initialFocus","wrapperRef","codeLength","id","onChange","type","ALPHANUMERTIC","letterCase","CASE_TYPES","UPPERCASE","value","disabled","hide","focusColor","classNameComponent","classNameWrapper","classNameCodeWrapper","classNameEnteredValue","classNameCode","classNameCodeWrapperFocus","customStyleComponent","customStyleWrapper","customStyleCodeWrapper","customStyleEnteredValue","customStyleCode","customStyleCodeWrapperFocus","placeholder","customStylePlaceholder","DEFAULT_CODES","useMemo","Array","keys","useState","code","setCode","key","undefined","pressKey","setPressKey","isFocus","setIsFocus","$wrapperRef","useRef","$component","$inputRef","curItemIndex","setCurItemIndex","inputId","getRandomId","useEffect","document","getElementById","click","onKeyDown","useCallback","left","right","Math","min","length","handleOnCodeChange","current","setSelectionRange","getCased","pressedKey","codeSplits","includes","v","getAlphanumeric","ALPHA","getAlpha","NUMBER","getNumeric","handleSetCode","newCode","push","index","join","max","selectionIndex","handleOnCodeFocus","handleOnCodeBlur","attributes","res","ref","className","cx","getClassName","style","map","i","k","isEntered","isActive","focusStyle","onClick","focus","color","autoComplete","maxLength","required","onFocus","onBlur","e","toLowerCase","preventDefault","shiftKey","ctrlKey","altKey","metaKey","validKey","indexOf","isValidKey","position","opacity","marginLeft","window","ReactCodesInput","classes","params","arg","argType","isArray","inner","apply","hasOwnProperty","call","random","toString","slice","String","forEach","charCode","charCodeAt","toUpperCase","LOWERCASE","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","r","Symbol","toStringTag","Object","defineProperty"],"sourceRoot":""}